// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workhourtrack.Entities;

#nullable disable

namespace Workhourtrack.Migrations
{
    [DbContext(typeof(HourtrackContext))]
    [Migration("20230614221956_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Workhourtrack.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("Workhourtrack.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("projects", (string)null);
                });

            modelBuilder.Entity("Workhourtrack.Entities.Workhour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("WorkDescription")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "EmployeeId" }, "EmployeeId");

                    b.HasIndex(new[] { "ProjectId" }, "ProjectId");

                    b.ToTable("workhours", (string)null);
                });

            modelBuilder.Entity("Workhourtrack.Entities.Workhour", b =>
                {
                    b.HasOne("Workhourtrack.Entities.Employee", "Employee")
                        .WithMany("Workhours")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("workhours_ibfk_1");

                    b.HasOne("Workhourtrack.Entities.Project", "Project")
                        .WithMany("Workhours")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("workhours_ibfk_2");

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Workhourtrack.Entities.Employee", b =>
                {
                    b.Navigation("Workhours");
                });

            modelBuilder.Entity("Workhourtrack.Entities.Project", b =>
                {
                    b.Navigation("Workhours");
                });
#pragma warning restore 612, 618
        }
    }
}
